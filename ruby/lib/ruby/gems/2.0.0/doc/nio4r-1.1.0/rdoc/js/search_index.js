var search_data = {"index":{"searchIndex":["nio","monitor","selector","close()","close()","closed?()","closed?()","deregister()","empty?()","engine()","new()","new()","readable?()","register()","registered?()","select()","wakeup()","writable?()","writeable?()"],"longSearchIndex":["nio","nio::monitor","nio::selector","nio::monitor#close()","nio::selector#close()","nio::monitor#closed?()","nio::selector#closed?()","nio::selector#deregister()","nio::selector#empty?()","nio::engine()","nio::monitor::new()","nio::selector::new()","nio::monitor#readable?()","nio::selector#register()","nio::selector#registered?()","nio::selector#select()","nio::selector#wakeup()","nio::monitor#writable?()","nio::monitor#writeable?()"],"info":[["NIO","","NIO.html","","<p>New I/O for Ruby\n"],["NIO::Monitor","","NIO/Monitor.html","","<p>Monitors watch IO objects for specific events\n"],["NIO::Selector","","NIO/Selector.html","","<p>Selectors monitor IO objects for events of interest\n"],["close","NIO::Monitor","NIO/Monitor.html#method-i-close","(deregister = true)","<p>Deactivate this monitor\n"],["close","NIO::Selector","NIO/Selector.html#method-i-close","()","<p>Close this selector and free its resources\n"],["closed?","NIO::Monitor","NIO/Monitor.html#method-i-closed-3F","()","<p>Is this monitor closed?\n"],["closed?","NIO::Selector","NIO/Selector.html#method-i-closed-3F","()","<p>Is this selector closed?\n"],["deregister","NIO::Selector","NIO/Selector.html#method-i-deregister","(io)","<p>Deregister the given IO object from the selector\n"],["empty?","NIO::Selector","NIO/Selector.html#method-i-empty-3F","()",""],["engine","NIO","NIO.html#method-c-engine","()","<p>NIO implementation, one of the following (as a string):\n<p>select: in pure Ruby using Kernel.select\n<p>libev: …\n"],["new","NIO::Monitor","NIO/Monitor.html#method-c-new","(io, interests, selector)","<p>:nodoc\n"],["new","NIO::Selector","NIO/Selector.html#method-c-new","()","<p>Create a new NIO::Selector\n"],["readable?","NIO::Monitor","NIO/Monitor.html#method-i-readable-3F","()","<p>Is the IO object readable?\n"],["register","NIO::Selector","NIO/Selector.html#method-i-register","(io, interest)","<p>Register interest in an IO object with the selector for the given types of\nevents. Valid event types …\n"],["registered?","NIO::Selector","NIO/Selector.html#method-i-registered-3F","(io)","<p>Is the given IO object registered with the selector?\n"],["select","NIO::Selector","NIO/Selector.html#method-i-select","(timeout = nil)","<p>Select which monitors are ready\n"],["wakeup","NIO::Selector","NIO/Selector.html#method-i-wakeup","()","<p>Wake up a thread that&#39;s in the middle of selecting on this selector, if\nany such thread exists.\n<p>Invoking …\n"],["writable?","NIO::Monitor","NIO/Monitor.html#method-i-writable-3F","()","<p>Is the IO object writable?\n"],["writeable?","NIO::Monitor","NIO/Monitor.html#method-i-writeable-3F","()",""]]}}