var search_data = {"index":{"searchIndex":["net","ntlm","blob","client","session","encodeutil","field","fieldset","int16le","int32le","int64le","message","type0","type1","type2","type3","securitybuffer","string","version","[]()","[]=()","add_field()","apply_des()","authenticate!()","blank_password?()","blob()","calculate_user_session_key!()","client_challenge()","client_cipher()","client_seal_key()","client_sign_key()","create()","data_edge()","data_size()","data_size()","decode64()","decode64()","decode_utf16le()","define_accessor()","deflag()","disable()","domain()","dump_flags()","enable()","encode64()","encode_utf16le()","gen_keys()","has_disabled_fields?()","has_flag?()","head_size()","init_context()","int16le()","int32le()","int64le()","lm_hash()","lm_response()","lmv2_resp()","lmv2_response()","master_key()","names()","negotiate_key_exchange?()","new()","new()","new()","new()","new()","new()","new()","new()","new()","nt_proof_str()","ntlm2_session()","ntlm2_session_password?()","ntlm_hash()","ntlm_response()","ntlm_version()","ntlmv2_hash()","ntlmv2_hash()","ntlmv2_password?()","ntlmv2_resp()","ntlmv2_response()","oem_or_unicode_str()","opts()","pack_int64le()","parse()","parse()","parse()","parse()","parse()","parse()","parse()","parse()","parse()","parse()","password()","password?()","prototypes()","raw_sequence()","response()","seal_message()","security_buffer()","security_buffers()","sequence()","serialize()","serialize()","serialize()","serialize()","serialize()","serialize()","serialize()","serialize()","server_challenge()","server_cipher()","server_seal_key()","server_sign_key()","session()","set_flag()","sign_message()","size()","size()","size()","split7()","string()","swap16()","timestamp()","type1_message()","types()","unseal_message()","use_oem_strings?()","user_session_key()","username()","value()","value=()","value=()","verify_signature()","workstation()"],"longSearchIndex":["net","net::ntlm","net::ntlm::blob","net::ntlm::client","net::ntlm::client::session","net::ntlm::encodeutil","net::ntlm::field","net::ntlm::fieldset","net::ntlm::int16le","net::ntlm::int32le","net::ntlm::int64le","net::ntlm::message","net::ntlm::message::type0","net::ntlm::message::type1","net::ntlm::message::type2","net::ntlm::message::type3","net::ntlm::securitybuffer","net::ntlm::string","net::ntlm::version","net::ntlm::fieldset#[]()","net::ntlm::fieldset#[]=()","net::ntlm::fieldset::add_field()","net::ntlm::apply_des()","net::ntlm::client::session#authenticate!()","net::ntlm::message::type3#blank_password?()","net::ntlm::client::session#blob()","net::ntlm::client::session#calculate_user_session_key!()","net::ntlm::client::session#client_challenge()","net::ntlm::client::session#client_cipher()","net::ntlm::client::session#client_seal_key()","net::ntlm::client::session#client_sign_key()","net::ntlm::message::type3::create()","net::ntlm::message#data_edge()","net::ntlm::message#data_size()","net::ntlm::securitybuffer#data_size()","net::ntlm::message::decode64()","net::ntlm::message#decode64()","net::ntlm::encodeutil::decode_utf16le()","net::ntlm::fieldset::define_accessor()","net::ntlm::message#deflag()","net::ntlm::fieldset#disable()","net::ntlm::client::session#domain()","net::ntlm::message#dump_flags()","net::ntlm::fieldset#enable()","net::ntlm::message#encode64()","net::ntlm::encodeutil::encode_utf16le()","net::ntlm::gen_keys()","net::ntlm::fieldset#has_disabled_fields?()","net::ntlm::message#has_flag?()","net::ntlm::message#head_size()","net::ntlm::client#init_context()","net::ntlm::fieldset::int16le()","net::ntlm::fieldset::int32le()","net::ntlm::fieldset::int64le()","net::ntlm::lm_hash()","net::ntlm::lm_response()","net::ntlm::client::session#lmv2_resp()","net::ntlm::lmv2_response()","net::ntlm::client::session#master_key()","net::ntlm::fieldset::names()","net::ntlm::client::session#negotiate_key_exchange?()","net::ntlm::client::new()","net::ntlm::client::session::new()","net::ntlm::field::new()","net::ntlm::fieldset::new()","net::ntlm::int16le::new()","net::ntlm::int32le::new()","net::ntlm::int64le::new()","net::ntlm::securitybuffer::new()","net::ntlm::string::new()","net::ntlm::client::session#nt_proof_str()","net::ntlm::ntlm2_session()","net::ntlm::message::type3#ntlm2_session_password?()","net::ntlm::ntlm_hash()","net::ntlm::ntlm_response()","net::ntlm::message::type3#ntlm_version()","net::ntlm::ntlmv2_hash()","net::ntlm::client::session#ntlmv2_hash()","net::ntlm::message::type3#ntlmv2_password?()","net::ntlm::client::session#ntlmv2_resp()","net::ntlm::ntlmv2_response()","net::ntlm::client::session#oem_or_unicode_str()","net::ntlm::fieldset::opts()","net::ntlm::pack_int64le()","net::ntlm::blob#parse()","net::ntlm::field#parse()","net::ntlm::fieldset#parse()","net::ntlm::int16le#parse()","net::ntlm::int32le#parse()","net::ntlm::int64le#parse()","net::ntlm::message#parse()","net::ntlm::message::parse()","net::ntlm::securitybuffer#parse()","net::ntlm::string#parse()","net::ntlm::client::session#password()","net::ntlm::message::type3#password?()","net::ntlm::fieldset::prototypes()","net::ntlm::client::session#raw_sequence()","net::ntlm::message::type2#response()","net::ntlm::client::session#seal_message()","net::ntlm::fieldset::security_buffer()","net::ntlm::message#security_buffers()","net::ntlm::client::session#sequence()","net::ntlm::field#serialize()","net::ntlm::fieldset#serialize()","net::ntlm::int16le#serialize()","net::ntlm::int32le#serialize()","net::ntlm::int64le#serialize()","net::ntlm::message#serialize()","net::ntlm::securitybuffer#serialize()","net::ntlm::string#serialize()","net::ntlm::client::session#server_challenge()","net::ntlm::client::session#server_cipher()","net::ntlm::client::session#server_seal_key()","net::ntlm::client::session#server_sign_key()","net::ntlm::client#session()","net::ntlm::message#set_flag()","net::ntlm::client::session#sign_message()","net::ntlm::field#size()","net::ntlm::fieldset#size()","net::ntlm::message#size()","net::ntlm::split7()","net::ntlm::fieldset::string()","net::ntlm::encodeutil::swap16()","net::ntlm::client::session#timestamp()","net::ntlm::client#type1_message()","net::ntlm::fieldset::types()","net::ntlm::client::session#unseal_message()","net::ntlm::client::session#use_oem_strings?()","net::ntlm::client::session#user_session_key()","net::ntlm::client::session#username()","net::ntlm::securitybuffer#value()","net::ntlm::securitybuffer#value=()","net::ntlm::string#value=()","net::ntlm::client::session#verify_signature()","net::ntlm::client::session#workstation()"],"info":[["Net","","Net.html","",""],["Net::NTLM","","Net/NTLM.html","",""],["Net::NTLM::Blob","","Net/NTLM/Blob.html","",""],["Net::NTLM::Client","","Net/NTLM/Client.html","",""],["Net::NTLM::Client::Session","","Net/NTLM/Client/Session.html","",""],["Net::NTLM::EncodeUtil","","Net/NTLM/EncodeUtil.html","",""],["Net::NTLM::Field","","Net/NTLM/Field.html","","<p>base classes for primitives @private\n"],["Net::NTLM::FieldSet","","Net/NTLM/FieldSet.html","","<p>base class of data structure\n"],["Net::NTLM::Int16LE","","Net/NTLM/Int16LE.html","",""],["Net::NTLM::Int32LE","","Net/NTLM/Int32LE.html","",""],["Net::NTLM::Int64LE","","Net/NTLM/Int64LE.html","",""],["Net::NTLM::Message","","Net/NTLM/Message.html","","<p>@private false\n"],["Net::NTLM::Message::Type0","","Net/NTLM/Message/Type0.html","","<p>sub class definitions\n"],["Net::NTLM::Message::Type1","","Net/NTLM/Message/Type1.html","","<p>@private false\n"],["Net::NTLM::Message::Type2","","Net/NTLM/Message/Type2.html","","<p>@private false\n"],["Net::NTLM::Message::Type3","","Net/NTLM/Message/Type3.html","","<p>@private false\n"],["Net::NTLM::SecurityBuffer","","Net/NTLM/SecurityBuffer.html","",""],["Net::NTLM::String","","Net/NTLM/String.html","",""],["Net::NTLM::VERSION","","Net/NTLM/VERSION.html","","<p>@private\n"],["[]","Net::NTLM::FieldSet","Net/NTLM/FieldSet.html#method-i-5B-5D","(name)",""],["[]=","Net::NTLM::FieldSet","Net/NTLM/FieldSet.html#method-i-5B-5D-3D","(name, val)",""],["add_field","Net::NTLM::FieldSet","Net/NTLM/FieldSet.html#method-c-add_field","(name, type, opts)",""],["apply_des","Net::NTLM","Net/NTLM.html#method-c-apply_des","(plain, keys)",""],["authenticate!","Net::NTLM::Client::Session","Net/NTLM/Client/Session.html#method-i-authenticate-21","()","<p>Generate an NTLMv2 AUTHENTICATE_MESSAGE @see\nmsdn.microsoft.com/en-us/library/cc236643.aspx @return\n[Net::NTLM::Message::Type3] …\n"],["blank_password?","Net::NTLM::Message::Type3","Net/NTLM/Message/Type3.html#method-i-blank_password-3F","(server_challenge)","<p>@param server_challenge (see #password?)\n"],["blob","Net::NTLM::Client::Session","Net/NTLM/Client/Session.html#method-i-blob","()",""],["calculate_user_session_key!","Net::NTLM::Client::Session","Net/NTLM/Client/Session.html#method-i-calculate_user_session_key-21","()",""],["client_challenge","Net::NTLM::Client::Session","Net/NTLM/Client/Session.html#method-i-client_challenge","()",""],["client_cipher","Net::NTLM::Client::Session","Net/NTLM/Client/Session.html#method-i-client_cipher","()",""],["client_seal_key","Net::NTLM::Client::Session","Net/NTLM/Client/Session.html#method-i-client_seal_key","()",""],["client_sign_key","Net::NTLM::Client::Session","Net/NTLM/Client/Session.html#method-i-client_sign_key","()",""],["create","Net::NTLM::Message::Type3","Net/NTLM/Message/Type3.html#method-c-create","(arg, opt ={})","<p>Builds a Type 3 packet @note All options must be properly encoded with\neither unicode or oem encoding …\n"],["data_edge","Net::NTLM::Message","Net/NTLM/Message.html#method-i-data_edge","()",""],["data_size","Net::NTLM::Message","Net/NTLM/Message.html#method-i-data_size","()",""],["data_size","Net::NTLM::SecurityBuffer","Net/NTLM/SecurityBuffer.html#method-i-data_size","()",""],["decode64","Net::NTLM::Message","Net/NTLM/Message.html#method-c-decode64","(str)",""],["decode64","Net::NTLM::Message","Net/NTLM/Message.html#method-i-decode64","(str)",""],["decode_utf16le","Net::NTLM::EncodeUtil","Net/NTLM/EncodeUtil.html#method-c-decode_utf16le","(str)","<p>Decode a UTF16 string to a ASCII string @param [String] str The string to\nconvert\n"],["define_accessor","Net::NTLM::FieldSet","Net/NTLM/FieldSet.html#method-c-define_accessor","(name)",""],["deflag","Net::NTLM::Message","Net/NTLM/Message.html#method-i-deflag","()",""],["disable","Net::NTLM::FieldSet","Net/NTLM/FieldSet.html#method-i-disable","(name)",""],["domain","Net::NTLM::Client::Session","Net/NTLM/Client/Session.html#method-i-domain","()",""],["dump_flags","Net::NTLM::Message","Net/NTLM/Message.html#method-i-dump_flags","()",""],["enable","Net::NTLM::FieldSet","Net/NTLM/FieldSet.html#method-i-enable","(name)",""],["encode64","Net::NTLM::Message","Net/NTLM/Message.html#method-i-encode64","()",""],["encode_utf16le","Net::NTLM::EncodeUtil","Net/NTLM/EncodeUtil.html#method-c-encode_utf16le","(str)","<p>Encodes a ASCII string to a UTF16 string @param [String] str The string to\nconvert\n"],["gen_keys","Net::NTLM","Net/NTLM.html#method-c-gen_keys","(str)","<p>Not sure what this is doing @param [String] str String to generate keys for\n@api private\n"],["has_disabled_fields?","Net::NTLM::FieldSet","Net/NTLM/FieldSet.html#method-i-has_disabled_fields-3F","()",""],["has_flag?","Net::NTLM::Message","Net/NTLM/Message.html#method-i-has_flag-3F","(flag)",""],["head_size","Net::NTLM::Message","Net/NTLM/Message.html#method-i-head_size","()",""],["init_context","Net::NTLM::Client","Net/NTLM/Client.html#method-i-init_context","(resp = nil)","<p>@return [NTLM::Message]\n"],["int16LE","Net::NTLM::FieldSet","Net/NTLM/FieldSet.html#method-c-int16LE","(name, opts)","<p>@macro int16le_security_buffer\n\n<pre>@method $1\n@method $1=\n@return [Int16LE]</pre>\n"],["int32LE","Net::NTLM::FieldSet","Net/NTLM/FieldSet.html#method-c-int32LE","(name, opts)","<p>@macro int32le_security_buffer\n\n<pre>@method $1\n@method $1=\n@return [Int32LE]</pre>\n"],["int64LE","Net::NTLM::FieldSet","Net/NTLM/FieldSet.html#method-c-int64LE","(name, opts)","<p>@macro int64le_security_buffer\n\n<pre>@method $1\n@method $1=\n@return [Int64]</pre>\n"],["lm_hash","Net::NTLM","Net/NTLM.html#method-c-lm_hash","(password)","<p>Generates a Lan Manager Hash @param [String] password The password to base\nthe hash on\n"],["lm_response","Net::NTLM","Net/NTLM.html#method-c-lm_response","(arg)",""],["lmv2_resp","Net::NTLM::Client::Session","Net/NTLM/Client/Session.html#method-i-lmv2_resp","()",""],["lmv2_response","Net::NTLM","Net/NTLM.html#method-c-lmv2_response","(arg, opt = {})",""],["master_key","Net::NTLM::Client::Session","Net/NTLM/Client/Session.html#method-i-master_key","()",""],["names","Net::NTLM::FieldSet","Net/NTLM/FieldSet.html#method-c-names","()",""],["negotiate_key_exchange?","Net::NTLM::Client::Session","Net/NTLM/Client/Session.html#method-i-negotiate_key_exchange-3F","()",""],["new","Net::NTLM::Client","Net/NTLM/Client.html#method-c-new","(username, password, opts = {})","<p>@note All string parameters should be encoded in UTF-8. The proper\n\n<pre>final encoding for placing in the various ...</pre>\n"],["new","Net::NTLM::Client::Session","Net/NTLM/Client/Session.html#method-c-new","(client, challenge_message)","<p>@param client [Net::NTLM::Client] the client instance @param\nchallenge_message [Net::NTLM::Message::Type2] …\n"],["new","Net::NTLM::Field","Net/NTLM/Field.html#method-c-new","(opts)",""],["new","Net::NTLM::FieldSet","Net/NTLM/FieldSet.html#method-c-new","()",""],["new","Net::NTLM::Int16LE","Net/NTLM/Int16LE.html#method-c-new","(opt)",""],["new","Net::NTLM::Int32LE","Net/NTLM/Int32LE.html#method-c-new","(opt)",""],["new","Net::NTLM::Int64LE","Net/NTLM/Int64LE.html#method-c-new","(opt)",""],["new","Net::NTLM::SecurityBuffer","Net/NTLM/SecurityBuffer.html#method-c-new","(opts={})",""],["new","Net::NTLM::String","Net/NTLM/String.html#method-c-new","(opts)",""],["nt_proof_str","Net::NTLM::Client::Session","Net/NTLM/Client/Session.html#method-i-nt_proof_str","()",""],["ntlm2_session","Net::NTLM","Net/NTLM.html#method-c-ntlm2_session","(arg, opt = {})",""],["ntlm2_session_password?","Net::NTLM::Message::Type3","Net/NTLM/Message/Type3.html#method-i-ntlm2_session_password-3F","(password, server_challenge)",""],["ntlm_hash","Net::NTLM","Net/NTLM.html#method-c-ntlm_hash","(password, opt = {})","<p>Generate a NTLM Hash @param [String] password The password to base the hash\non @option opt :unicode (false) …\n"],["ntlm_response","Net::NTLM","Net/NTLM.html#method-c-ntlm_response","(arg)",""],["ntlm_version","Net::NTLM::Message::Type3","Net/NTLM/Message/Type3.html#method-i-ntlm_version","()","<p>@return [Symbol]\n"],["ntlmv2_hash","Net::NTLM","Net/NTLM.html#method-c-ntlmv2_hash","(user, password, target, opt={})","<p>Generate a NTLMv2 Hash @param [String] user The username @param [String]\npassword The password @param …\n"],["ntlmv2_hash","Net::NTLM::Client::Session","Net/NTLM/Client/Session.html#method-i-ntlmv2_hash","()",""],["ntlmv2_password?","Net::NTLM::Message::Type3","Net/NTLM/Message/Type3.html#method-i-ntlmv2_password-3F","(password, server_challenge)",""],["ntlmv2_resp","Net::NTLM::Client::Session","Net/NTLM/Client/Session.html#method-i-ntlmv2_resp","()",""],["ntlmv2_response","Net::NTLM","Net/NTLM.html#method-c-ntlmv2_response","(arg, opt = {})",""],["oem_or_unicode_str","Net::NTLM::Client::Session","Net/NTLM/Client/Session.html#method-i-oem_or_unicode_str","(str)",""],["opts","Net::NTLM::FieldSet","Net/NTLM/FieldSet.html#method-c-opts","()",""],["pack_int64le","Net::NTLM","Net/NTLM.html#method-c-pack_int64le","(val)","<p>Conver the value to a 64-Bit Little Endian Int @param [String] val The\nstring to convert\n"],["parse","Net::NTLM::Blob","Net/NTLM/Blob.html#method-i-parse","(str, offset=0)",""],["parse","Net::NTLM::Field","Net/NTLM/Field.html#method-i-parse","(str, offset=0)","<p>Parser function for field data Exists in this class to be overridden by\nchild classes\n"],["parse","Net::NTLM::FieldSet","Net/NTLM/FieldSet.html#method-i-parse","(str, offset=0)",""],["parse","Net::NTLM::Int16LE","Net/NTLM/Int16LE.html#method-i-parse","(str, offset=0)",""],["parse","Net::NTLM::Int32LE","Net/NTLM/Int32LE.html#method-i-parse","(str, offset=0)",""],["parse","Net::NTLM::Int64LE","Net/NTLM/Int64LE.html#method-i-parse","(str, offset=0)",""],["parse","Net::NTLM::Message","Net/NTLM/Message.html#method-i-parse","(str)","<p>@return [self]\n"],["parse","Net::NTLM::Message","Net/NTLM/Message.html#method-c-parse","(str)",""],["parse","Net::NTLM::SecurityBuffer","Net/NTLM/SecurityBuffer.html#method-i-parse","(str, offset=0)",""],["parse","Net::NTLM::String","Net/NTLM/String.html#method-i-parse","(str, offset=0)",""],["password","Net::NTLM::Client::Session","Net/NTLM/Client/Session.html#method-i-password","()",""],["password?","Net::NTLM::Message::Type3","Net/NTLM/Message/Type3.html#method-i-password-3F","(password, server_challenge)","<p>@param password [String] @param server_challenge [String] The server&#39;s\n{Type2#challenge challenge} …\n"],["prototypes","Net::NTLM::FieldSet","Net/NTLM/FieldSet.html#method-c-prototypes","()",""],["raw_sequence","Net::NTLM::Client::Session","Net/NTLM/Client/Session.html#method-i-raw_sequence","()",""],["response","Net::NTLM::Message::Type2","Net/NTLM/Message/Type2.html#method-i-response","(arg, opt = {})","<p>Generates a Type 3 response based on the Type 2 Information @return [Type3]\n@option arg [String] :username …\n"],["seal_message","Net::NTLM::Client::Session","Net/NTLM/Client/Session.html#method-i-seal_message","(message)",""],["security_buffer","Net::NTLM::FieldSet","Net/NTLM/FieldSet.html#method-c-security_buffer","(name, opts)","<p>@macro security_buffer\n\n<pre>@method $1\n@method $1=\n@return [SecurityBuffer]</pre>\n"],["security_buffers","Net::NTLM::Message","Net/NTLM/Message.html#method-i-security_buffers","()",""],["sequence","Net::NTLM::Client::Session","Net/NTLM/Client/Session.html#method-i-sequence","()",""],["serialize","Net::NTLM::Field","Net/NTLM/Field.html#method-i-serialize","()","<p>Serializer function for field data Exists in this class to be overridden by\nchild classes\n"],["serialize","Net::NTLM::FieldSet","Net/NTLM/FieldSet.html#method-i-serialize","()",""],["serialize","Net::NTLM::Int16LE","Net/NTLM/Int16LE.html#method-i-serialize","()",""],["serialize","Net::NTLM::Int32LE","Net/NTLM/Int32LE.html#method-i-serialize","()",""],["serialize","Net::NTLM::Int64LE","Net/NTLM/Int64LE.html#method-i-serialize","()",""],["serialize","Net::NTLM::Message","Net/NTLM/Message.html#method-i-serialize","()",""],["serialize","Net::NTLM::SecurityBuffer","Net/NTLM/SecurityBuffer.html#method-i-serialize","()",""],["serialize","Net::NTLM::String","Net/NTLM/String.html#method-i-serialize","()",""],["server_challenge","Net::NTLM::Client::Session","Net/NTLM/Client/Session.html#method-i-server_challenge","()",""],["server_cipher","Net::NTLM::Client::Session","Net/NTLM/Client/Session.html#method-i-server_cipher","()",""],["server_seal_key","Net::NTLM::Client::Session","Net/NTLM/Client/Session.html#method-i-server_seal_key","()",""],["server_sign_key","Net::NTLM::Client::Session","Net/NTLM/Client/Session.html#method-i-server_sign_key","()",""],["session","Net::NTLM::Client","Net/NTLM/Client.html#method-i-session","()","<p>@return [Client::Session]\n"],["set_flag","Net::NTLM::Message","Net/NTLM/Message.html#method-i-set_flag","(flag)",""],["sign_message","Net::NTLM::Client::Session","Net/NTLM/Client/Session.html#method-i-sign_message","(message)",""],["size","Net::NTLM::Field","Net/NTLM/Field.html#method-i-size","()",""],["size","Net::NTLM::FieldSet","Net/NTLM/FieldSet.html#method-i-size","()",""],["size","Net::NTLM::Message","Net/NTLM/Message.html#method-i-size","()",""],["split7","Net::NTLM","Net/NTLM.html#method-c-split7","(str)","<p>Builds an array of strings that are 7 characters long @param [String] str\nThe string to split @api private …\n"],["string","Net::NTLM::FieldSet","Net/NTLM/FieldSet.html#method-c-string","(name, opts)","<p>@macro string_security_buffer\n\n<pre>@method $1\n@method $1=\n@return [String]</pre>\n"],["swap16","Net::NTLM::EncodeUtil","Net/NTLM/EncodeUtil.html#method-c-swap16","(str)","<p>Taggle the strings endianness between big/little and little/big @param\n[String] str The string to swap …\n"],["timestamp","Net::NTLM::Client::Session","Net/NTLM/Client/Session.html#method-i-timestamp","()","<p>epoch -&gt; milsec from Jan 1, 1601 @see support.microsoft.com/kb/188768\n"],["type1_message","Net::NTLM::Client","Net/NTLM/Client.html#method-i-type1_message","()","<p>@return [Message::Type1]\n"],["types","Net::NTLM::FieldSet","Net/NTLM/FieldSet.html#method-c-types","()",""],["unseal_message","Net::NTLM::Client::Session","Net/NTLM/Client/Session.html#method-i-unseal_message","(emessage)",""],["use_oem_strings?","Net::NTLM::Client::Session","Net/NTLM/Client/Session.html#method-i-use_oem_strings-3F","()",""],["user_session_key","Net::NTLM::Client::Session","Net/NTLM/Client/Session.html#method-i-user_session_key","()",""],["username","Net::NTLM::Client::Session","Net/NTLM/Client/Session.html#method-i-username","()",""],["value","Net::NTLM::SecurityBuffer","Net/NTLM/SecurityBuffer.html#method-i-value","()",""],["value=","Net::NTLM::SecurityBuffer","Net/NTLM/SecurityBuffer.html#method-i-value-3D","(val)",""],["value=","Net::NTLM::String","Net/NTLM/String.html#method-i-value-3D","(val)",""],["verify_signature","Net::NTLM::Client::Session","Net/NTLM/Client/Session.html#method-i-verify_signature","(signature, message)",""],["workstation","Net::NTLM::Client::Session","Net/NTLM/Client/Session.html#method-i-workstation","()",""]]}}